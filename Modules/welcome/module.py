#!/usr/bin/env python3
"""
Welcome Module - –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –Ω–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
–î–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ—Ç –±–∞–∑–æ–≤—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ SDK
"""

from Systems.sdk import BaseModule, get_event_client


class Welcome(BaseModule):
    """–ú–æ–¥—É–ª—å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è –¥–ª—è –Ω–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π SwiftDevBot"""

    name = "welcome"
    version = "1.0.0"
    description = "Welcome module for new users"
    author = "SwiftDevBot"
    requires = ["eventbus", "storage"]

    def __init__(self):
        super().__init__(__file__.replace('/module.py', ''))

    async def on_load(self):
        await super().on_load()

        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º EventBus –∫–ª–∏–µ–Ω—Ç
        self.eventbus = get_event_client(self.name)

        # –ó–∞–≥—Ä—É–∂–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
        await self.storage.load()

        # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥ –∏ —Å–æ–±—ã—Ç–∏–π
        @self.on_command("start")
        async def handle_start(message):
            """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start"""
            user = message.from_user
            self.logger.info(f"User {user.id} ({user.username}) started the bot")

            # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
            starts = self.storage.get("total_starts", 0) + 1
            self.storage.set("total_starts", starts)
            await self.storage.save()

            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ
            await self.eventbus.send_notification(
                user_id=user.id,
                message="""üéâ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ SwiftDevBot!

–≠—Ç–æ –º–æ–¥—É–ª—å–Ω–∞—è –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞ –¥–ª—è Telegram –±–æ—Ç–æ–≤ —Å –æ—Ç–∫—Ä—ã—Ç—ã–º –∏—Å—Ö–æ–¥–Ω—ã–º –∫–æ–¥–æ–º.

üìã –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:
/help - —Å–ø—Ä–∞–≤–∫–∞
/test - —Ç–µ—Å—Ç SDK

üåê Web-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ –∞–¥—Ä–µ—Å—É: http://localhost:8000

–ü—Ä–∏—è—Ç–Ω–æ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è! ü§ñ""",
                type="welcome"
            )

            return f"Welcome message sent to user {user.id}"

        @self.on_command("help")
        async def handle_help(message):
            """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /help"""
            help_text = """üìö –°–ø—Ä–∞–≤–∫–∞ –ø–æ SwiftDevBot

ü§ñ –û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:
/start - –∑–∞–ø—É—Å–∫ –±–æ—Ç–∞ –∏ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ
/help - —ç—Ç–∞ —Å–ø—Ä–∞–≤–∫–∞
/test - —Ç–µ—Å—Ç —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏

üß© –ú–æ–¥—É–ª–∏:
‚Ä¢ Welcome - –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –∏ —Å–ø—Ä–∞–≤–∫–∞
‚Ä¢ Weather - –ø–æ–≥–æ–¥–∞ (–≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ)
‚Ä¢ Spam Filter - —Ñ–∏–ª—å—Ç—Ä —Å–ø–∞–º–∞ (–≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ)

üåê Web-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å: http://localhost:8000

üí° –î–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤: SDK –ø–æ–∑–≤–æ–ª—è–µ—Ç —Å–æ–∑–¥–∞–≤–∞—Ç—å —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–µ –º–æ–¥—É–ª–∏
—Å –∫–æ–º–∞–Ω–¥–∞–º–∏, —Å–æ–±—ã—Ç–∏—è–º–∏ –∏ –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞–º–∏."""

            await self.eventbus.send_notification(
                user_id=message.from_user.id,
                message=help_text,
                type="info"
            )

            return "Help sent"

        @self.on_command("stats")
        async def handle_stats(message):
            """–ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è"""
            if message.from_user.id != int(self.storage.get("admin_id", 0)):
                await self.eventbus.send_notification(
                    user_id=message.from_user.id,
                    message="‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏",
                    type="error"
                )
                return "Access denied"

            total_starts = self.storage.get("total_starts", 0)
            total_users = self.storage.get("unique_users", 0)

            stats_text = f"""üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ Welcome –º–æ–¥—É–ª—è:

üöÄ –í—Å–µ–≥–æ –∑–∞–ø—É—Å–∫–æ–≤: {total_starts}
üë• –£–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {total_users}
üìÖ –í–µ—Ä—Å–∏—è –º–æ–¥—É–ª—è: {self.version}

üïê –í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã: {self.storage.get('started_at', 'N/A')}"""

            await self.eventbus.send_notification(
                user_id=message.from_user.id,
                message=stats_text,
                type="info"
            )

            return f"Stats sent to admin {message.from_user.id}"

        @self.on_event("user.joined")
        async def handle_user_joined(event_data):
            """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–±—ã—Ç–∏—è –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
            user_id = event_data.get('user_id')
            if user_id:
                self.logger.info(f"New user joined via event: {user_id}")

                # –û–±–Ω–æ–≤–ª—è–µ–º —Å—á–µ—Ç—á–∏–∫ —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
                unique_users = self.storage.get("unique_users", 0) + 1
                self.storage.set("unique_users", unique_users)
                await self.storage.save()

        @self.web_tab("Welcome", "üéâ")
        async def render_welcome_tab():
            """Web-–≤–∫–ª–∞–¥–∫–∞ —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –º–æ–¥—É–ª–µ"""
            total_starts = self.storage.get("total_starts", 0)
            unique_users = self.storage.get("unique_users", 0)

            html = f"""
            <div class="welcome-tab">
                <h2>üéâ Welcome Module</h2>
                <p class="description">–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –Ω–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏ –±–∞–∑–æ–≤–∞—è —Å–ø—Ä–∞–≤–∫–∞</p>

                <div class="stats-grid">
                    <div class="stat-card">
                        <h3>üöÄ –ó–∞–ø—É—Å–∫–æ–≤ –±–æ—Ç–∞</h3>
                        <div class="stat-number">{total_starts}</div>
                    </div>

                    <div class="stat-card">
                        <h3>üë• –£–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π</h3>
                        <div class="stat-number">{unique_users}</div>
                    </div>

                    <div class="stat-card">
                        <h3>üì¶ –í–µ—Ä—Å–∏—è –º–æ–¥—É–ª—è</h3>
                        <div class="stat-number">{self.version}</div>
                    </div>
                </div>

                <div class="features">
                    <h3>‚ú® –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏</h3>
                    <ul>
                        <li>üéØ –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥ /start, /help, /stats</li>
                        <li>üì° –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–±—ã—Ç–∏–π user.joined</li>
                        <li>üíæ –õ–æ–∫–∞–ª—å–Ω–æ–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ –¥–∞–Ω–Ω—ã—Ö</li>
                        <li>üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è</li>
                        <li>üåê Web-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å</li>
                    </ul>
                </div>

                <div class="commands">
                    <h3>üí¨ –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã</h3>
                    <div class="command-list">
                        <code>/start</code> - –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
                        <code>/help</code> - —Å–ø—Ä–∞–≤–∫–∞ –ø–æ –±–æ—Ç—É
                        <code>/stats</code> - —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ (—Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω)
                    </div>
                </div>
            </div>

            <style>
            .welcome-tab {{
                max-width: 800px;
                margin: 0 auto;
                padding: 20px;
            }}

            .description {{
                font-size: 1.1em;
                color: #666;
                margin-bottom: 30px;
            }}

            .stats-grid {{
                display: grid;
                grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
                gap: 20px;
                margin-bottom: 30px;
            }}

            .stat-card {{
                background: white;
                border-radius: 8px;
                padding: 20px;
                text-align: center;
                box-shadow: 0 2px 4px rgba(0,0,0,0.1);
            }}

            .stat-card h3 {{
                margin: 0 0 10px 0;
                color: #666;
                font-size: 0.9em;
            }}

            .stat-number {{
                font-size: 2em;
                font-weight: bold;
                color: #007bff;
            }}

            .features, .commands {{
                background: white;
                border-radius: 8px;
                padding: 20px;
                margin-bottom: 20px;
                box-shadow: 0 2px 4px rgba(0,0,0,0.1);
            }}

            .features ul {{
                list-style: none;
                padding: 0;
            }}

            .features li {{
                padding: 5px 0;
                border-bottom: 1px solid #eee;
            }}

            .features li:last-child {{
                border-bottom: none;
            }}

            .command-list {{
                background: #f8f9fa;
                padding: 15px;
                border-radius: 4px;
                font-family: monospace;
            }}

            .command-list code {{
                display: block;
                margin: 5px 0;
                color: #007bff;
            }}
            </style>
            """

            return html

    async def on_start(self):
        await super().on_start()

        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤—Ä–µ–º—è –∑–∞–ø—É—Å–∫–∞
        from datetime import datetime
        self.storage.set("started_at", datetime.now().strftime("%Y-%m-%d %H:%M:%S"))
        await self.storage.save()

        self.logger.info("Welcome module started")


# –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä –º–æ–¥—É–ª—è
module = Welcome()
